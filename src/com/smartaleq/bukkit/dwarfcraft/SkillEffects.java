package com.smartaleq.bukkit.dwarfcraft;

import java.util.*;

public enum SkillEffects {
    E10 (10,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",270,0),
	E11 (11,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",274,0),
	E12 (12,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",257,0),
	E13 (13,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",285,0),
	E14 (14,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",278,0),
	E20 (20,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",269,0),
	E21 (21,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",273,0),
	E22 (22,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",256,0),
	E23 (23,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",284,0),
	E24 (24,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",277,0),
	E30 (30,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",271,0),
	E31 (31,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",275,0),
	E32 (32,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",258,0),
	E33 (33,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",286,0),
	E34 (34,new double[] { 0.20,0.16,0.12,0.08,0.04,0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },5,"itemuse",279,0),
	E40 (40,new double[] { 0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },0,"itemuse",290,0),
	E41 (41,new double[] { 0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },0,"itemuse",291,0),
	E42 (42,new double[] { 0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },0,"itemuse",292,0),
	E43 (43,new double[] { 0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },0,"itemuse",294,0),
	E44 (44,new double[] { 0.00,-0.04,-0.08,-0.12,-0.16,-0.20,-0.24,-0.28,-0.32,-0.36,-0.40,-0.44,-0.48,-0.52,-0.56,-0.60,-0.64,-0.68,-0.72,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75,-0.75 },0,"itemuse",293,0),
	E45 (45,new double[] { 0.20,0.22,0.24,0.26,0.28,0.30,0.32,0.34,0.36,0.38,0.40,0.42,0.44,0.46,0.48,0.50,0.52,0.54,0.56,0.58,0.60,0.62,0.64,0.66,0.68,0.70,0.72,0.74,0.76,0.78,0.80 },5,"itemuse",290,295),
	E46 (46,new double[] { 0.20,0.22,0.24,0.26,0.28,0.30,0.32,0.34,0.36,0.38,0.40,0.42,0.44,0.46,0.48,0.50,0.52,0.54,0.56,0.58,0.60,0.62,0.64,0.66,0.68,0.70,0.72,0.74,0.76,0.78,0.80 },5,"itemuse",291,295),
	E47 (47,new double[] { 0.20,0.22,0.24,0.26,0.28,0.30,0.32,0.34,0.36,0.38,0.40,0.42,0.44,0.46,0.48,0.50,0.52,0.54,0.56,0.58,0.60,0.62,0.64,0.66,0.68,0.70,0.72,0.74,0.76,0.78,0.80 },5,"itemuse",292,295),
	E48 (48,new double[] { 0.20,0.22,0.24,0.26,0.28,0.30,0.32,0.34,0.36,0.38,0.40,0.42,0.44,0.46,0.48,0.50,0.52,0.54,0.56,0.58,0.60,0.62,0.64,0.66,0.68,0.70,0.72,0.74,0.76,0.78,0.80 },5,"itemuse",294,295),
	E49 (49,new double[] { 0.20,0.22,0.24,0.26,0.28,0.30,0.32,0.34,0.36,0.38,0.40,0.42,0.44,0.46,0.48,0.50,0.52,0.54,0.56,0.58,0.60,0.62,0.64,0.66,0.68,0.70,0.72,0.74,0.76,0.78,0.80 },5,"itemuse",293,295),
	E50 (50,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.96,0.92,0.88,0.84,0.80,0.76,0.72,0.68,0.64,0.60,0.56,0.52,0.48,0.44,0.40,0.36,0.32,0.28,0.25,0.25,0.25,0.25,0.25,0.25,0.25 },5,"entityattack",268,0),
	E51 (51,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.96,0.92,0.88,0.84,0.80,0.76,0.72,0.68,0.64,0.60,0.56,0.52,0.48,0.44,0.40,0.36,0.32,0.28,0.25,0.25,0.25,0.25,0.25,0.25,0.25 },5,"entityattack",272,0),
	E52 (52,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.96,0.92,0.88,0.84,0.80,0.76,0.72,0.68,0.64,0.60,0.56,0.52,0.48,0.44,0.40,0.36,0.32,0.28,0.25,0.25,0.25,0.25,0.25,0.25,0.25 },5,"entityattack",267,0),
	E53 (53,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.96,0.92,0.88,0.84,0.80,0.76,0.72,0.68,0.64,0.60,0.56,0.52,0.48,0.44,0.40,0.36,0.32,0.28,0.25,0.25,0.25,0.25,0.25,0.25,0.25 },5,"entityattack",283,0),
	E54 (54,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.96,0.92,0.88,0.84,0.80,0.76,0.72,0.68,0.64,0.60,0.56,0.52,0.48,0.44,0.40,0.36,0.32,0.28,0.25,0.25,0.25,0.25,0.25,0.25,0.25 },5,"entityattack",276,0),
	E55 (55,new double[] { 0.75,0.80,0.85,0.90,0.95,1.00,1.05,1.10,1.15,1.20,1.25,1.30,1.35,1.40,1.45,1.50,1.55,1.60,1.65,1.70,1.75,1.80,1.85,1.90,1.95,2.00,2.05,2.10,2.15,2.20,2.25 },5,"entityattack",0,0),
	E56 (56,new double[] { 0.38,0.40,0.43,0.45,0.48,0.50,0.53,0.55,0.58,0.60,0.63,0.65,0.68,0.70,0.73,0.75,0.78,0.80,0.83,0.85,0.88,0.90,0.93,0.95,0.98,1.00,1.03,1.05,1.08,1.10,1.13 },25,"entityattack",0,0),
	E80 (80,new double[] { 0.75,0.80,0.85,0.90,0.95,1.00,1.05,1.10,1.15,1.20,1.25,1.30,1.35,1.40,1.45,1.50,1.55,1.60,1.65,1.70,1.75,1.80,1.85,1.90,1.95,2.00,2.00,2.00,2.00,2.00,2.00 },5,"fuelforge",0,0),
	E110 (110,new double[] { 1.10,1.08,1.06,1.04,1.02,1.00,0.98,0.96,0.94,0.92,0.90,0.88,0.86,0.84,0.82,0.80,0.78,0.76,0.74,0.72,0.70,0.68,0.66,0.64,0.62,0.60,0.58,0.56,0.54,0.52,0.50 },5,"damageblock",4,0),
	E111 (111,new double[] { 1.10,1.08,1.06,1.04,1.02,1.00,0.98,0.96,0.94,0.92,0.90,0.88,0.86,0.84,0.82,0.80,0.78,0.76,0.74,0.72,0.70,0.68,0.66,0.64,0.62,0.60,0.58,0.56,0.54,0.52,0.50 },5,"damageblock",4,0),
	E120 (120,new double[] { 0.50,0.55,0.60,0.65,0.70,0.75,0.80,0.85,0.90,0.95,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00 },10,"itemdrop",4,4),
	E121 (121,new double[] { 0.50,0.55,0.60,0.65,0.70,0.75,0.80,0.85,0.90,0.95,1.00,1.05,1.10,1.15,1.20,1.25,1.30,1.35,1.40,1.45,1.50,1.55,1.60,1.65,1.70,1.75,1.80,1.85,1.90,1.95,2.00 },10,"itemdrop",1,4),
	E130 (130,new double[] { 0.70,0.76,0.82,0.88,0.94,1.00,1.06,1.12,1.18,1.24,1.30,1.36,1.42,1.48,1.54,1.60,1.66,1.72,1.78,1.84,1.90,1.96,2.02,2.08,2.14,2.20,2.26,2.32,2.38,2.44,2.50 },5,"itemdrop",16,263),
	E131 (131,new double[] { 0.70,0.76,0.82,0.88,0.94,1.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00 },5,"itemdrop",15,15),
	E132 (132,new double[] { 0.00,0.00,0.00,0.00,0.00,0.00,1.06,1.12,1.18,1.24,1.30,1.36,1.42,1.48,1.54,1.60,1.66,1.72,1.78,1.84,1.90,1.96,2.02,2.08,2.14,2.20,2.26,2.32,2.38,2.44,2.50 },0,"itemdrop",15,265),
	E140 (140,new double[] { 0.70,0.76,0.82,0.88,0.94,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00 },4,"itemdrop",14,14),
	E141 (141,new double[] { 0.00,0.00,0.00,0.00,0.00,1.10,1.18,1.26,1.34,1.42,1.50,1.58,1.66,1.74,1.82,1.90,1.98,2.06,2.14,2.22,2.30,2.38,2.46,2.54,2.62,2.70,2.78,2.86,2.94,3.02,3.10 },0,"itemdrop",14,266),
	E142 (142,new double[] { 0.90,0.94,0.98,1.02,1.06,1.10,1.14,1.18,1.22,1.26,1.30,1.34,1.38,1.42,1.46,1.50,1.54,1.58,1.62,1.66,1.70,1.74,1.78,1.82,1.86,1.90,1.94,1.98,2.02,2.06,2.10 },3,"itemdrop",56,264),
	E143 (143,new double[] { 3.00,3.30,3.60,3.90,4.20,4.50,4.80,5.10,5.40,5.70,6.00,6.30,6.60,6.90,7.20,7.50,7.80,8.10,8.40,8.70,9.00,9.30,9.60,9.90,10.20,10.50,10.80,11.10,11.40,11.70,12.00 },5,"itemdrop",73,331),
	E210 (210,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.98,0.96,0.94,0.92,0.90,0.88,0.86,0.84,0.82,0.80,0.78,0.76,0.74,0.72,0.70,0.68,0.66,0.64,0.62,0.60,0.58,0.56,0.54,0.52,0.50 },5,"damageblock",12,0),
	E211 (211,new double[] { 0.80,0.84,0.88,0.92,0.96,1.00,1.04,1.08,1.12,1.16,1.20,1.24,1.28,1.32,1.36,1.40,1.44,1.48,1.52,1.56,1.60,1.64,1.68,1.72,1.76,1.80,1.84,1.88,1.92,1.96,2.00 },5,"itemdrop",12,12),
	E220 (220,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.98,0.96,0.94,0.92,0.90,0.88,0.86,0.84,0.82,0.80,0.78,0.76,0.74,0.72,0.70,0.68,0.66,0.64,0.62,0.60,0.58,0.56,0.54,0.52,0.50 },5,"damageblock",13,0),
	E221 (221,new double[] { 0.80,0.84,0.88,0.92,0.96,1.00,1.04,1.08,1.12,1.16,1.20,1.24,1.28,1.32,1.36,1.40,1.44,1.48,1.52,1.56,1.60,1.64,1.68,1.72,1.76,1.80,1.84,1.88,1.92,1.96,2.00 },5,"itemdrop",13,13),
	E230 (230,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.98,0.96,0.94,0.92,0.90,0.88,0.86,0.84,0.82,0.80,0.78,0.76,0.74,0.72,0.70,0.68,0.66,0.64,0.62,0.60,0.58,0.56,0.54,0.52,0.50 },5,"damageblock",3,0),
	E231 (231,new double[] { 0.50,0.55,0.60,0.65,0.70,0.75,0.80,0.85,0.90,0.95,1.00,1.05,1.10,1.15,1.20,1.25,1.30,1.35,1.40,1.45,1.50,1.55,1.60,1.65,1.70,1.75,1.80,1.85,1.90,1.95,2.00 },10,"itemdrop",3,3),
	E310 (310,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.98,0.96,0.94,0.92,0.90,0.88,0.86,0.84,0.82,0.80,0.78,0.76,0.74,0.72,0.70,0.68,0.66,0.64,0.62,0.60,0.58,0.56,0.54,0.52,0.50 },5,"damageblock",17,0),
	E311 (311,new double[] { 1.00,1.00,1.00,1.00,1.00,1.00,1.03,1.06,1.10,1.13,1.16,1.19,1.22,1.26,1.29,1.32,1.35,1.38,1.42,1.45,1.48,1.51,1.54,1.58,1.61,1.64,1.67,1.70,1.74,1.77,1.80 },5,"itemdrop",17,17),
	E320 (320,new double[] { 3.00,3.00,3.00,3.00,3.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,5.00,5.00,5.00,5.00,5.00,5.00,5.00,6.00,6.00,6.00,6.00,6.00,6.00,6.00,6.00,6.00,6.00,6.00 },5,"craftitem",5,0),
	E321 (321,new double[] { 3.00,3.00,3.00,3.00,3.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,5.00,5.00,5.00,5.00,5.00,5.00,5.00,5.00,5.00,5.00,6.00,6.00,6.00,6.00,6.00,6.00 },5,"craftitem",280,0),
	E410 (410,new double[] { 0.25,0.30,0.35,0.40,0.45,0.50,0.55,0.60,0.65,0.70,0.75,0.80,0.85,0.90,0.95,1.00,1.05,1.10,1.15,1.20,1.25,1.30,1.35,1.40,1.45,1.50,1.55,1.60,1.65,1.70,1.75 },5,"itemdrop",0,295),
	E411 (411,new double[] { 0.20,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.30,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.40,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.50 },30,"itemdrop",0,296),
	E420 (420,new double[] { 0.70,0.76,0.82,0.88,0.94,1.00,1.06,1.12,1.18,1.24,1.30,1.36,1.42,1.48,1.54,1.60,1.66,1.72,1.78,1.84,1.90,1.96,2.02,2.08,2.14,2.20,2.26,2.32,2.38,2.44,2.50 },5,"itemdrop",81,81),
	E421 (421,new double[] { 0.70,0.76,0.82,0.88,0.94,1.00,1.06,1.12,1.18,1.24,1.30,1.36,1.42,1.48,1.54,1.60,1.66,1.72,1.78,1.84,1.90,1.96,2.02,2.08,2.14,2.20,2.26,2.32,2.38,2.44,2.50 },5,"itemdrop",338,338),
	E510 (510,new double[] { 0.60,0.68,0.76,0.84,0.92,1.00,1.08,1.16,1.24,1.32,1.40,1.48,1.56,1.64,1.72,1.80,1.88,1.96,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00 },5,"itemdrop",0,0),
	E511 (511,new double[] { 0.00,0.00,0.00,0.00,0.00,0.00,0.20,0.40,0.60,0.80,1.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00 },10,"itemdrop",53,5),
	E512 (512,new double[] { 0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00 },0,"itemdrop",53,53),
	E513 (513,new double[] { 0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.90,1.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00 },15,"itemdrop",67,4),
	E514 (514,new double[] { 0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00 },0,"itemdrop",67,67),
	E520 (520,new double[] { 0.00,0.04,0.08,0.12,0.16,0.20,0.24,0.28,0.32,0.36,0.40,0.44,0.48,0.52,0.56,0.60,0.64,0.68,0.72,0.76,0.80,0.84,0.88,0.92,0.96,1.00,1.00,1.00,1.00,1.00,1.00 },0,"itemdrop",0,0),
	E530 (530,new double[] { 1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,3.00,3.00 },5,"craftitem",65,0),
	E531 (531,new double[] { 1.00,1.00,1.00,1.00,1.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,4.00,4.00,4.00,4.00,4.00,4.00 },5,"craftitem",0,0),
	E532 (532,new double[] { 3.00,3.00,3.00,3.00,3.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,4.00,5.00,5.00,5.00,5.00,5.00,5.00,5.00,5.00,5.00,5.00,6.00,6.00,6.00,6.00,6.00,6.00 },5,"craftitem",53,0),
	E610 (610,new double[] { 1.00,1.00,1.00,1.00,1.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,4.00,4.00,4.00,4.00,4.00,4.00 },0,"craftitem",0,0),
	E620 (620,new double[] { 1.00,1.00,1.00,1.00,1.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,3.00,4.00,4.00,4.00,4.00,4.00,4.00 },0,"craftitem",0,0),
	E630 (630,new double[] { 1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00 },0,"craftitem",0,0),
	E631 (631,new double[] { 1.25,1.20,1.15,1.10,1.05,1.00,0.95,0.90,0.85,0.80,0.75,0.70,0.65,0.60,0.55,0.50,0.45,0.40,0.35,0.30,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25 },5,"entitydamaged",0,0),
	E640 (640,new double[] { 1.20,1.16,1.12,1.08,1.04,1.00,0.96,0.92,0.88,0.84,0.80,0.76,0.72,0.68,0.64,0.60,0.56,0.52,0.48,0.44,0.40,0.36,0.32,0.28,0.25,0.25,0.25,0.25,0.25,0.25,0.25 },5,"itemuse",0,0),
	E641 (641,new double[] { 1.25,1.20,1.15,1.10,1.05,1.00,0.95,0.90,0.85,0.80,0.75,0.70,0.65,0.60,0.55,0.50,0.45,0.40,0.35,0.30,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25 },5,"entitydamaged",0,0),
	E650 (650,new double[] { 15.0,16.0,16.0,17.0,17.0,18.0,18.0,19.0,19.0,20.0,20.0,21.0,21.0,22.0,22.0,23.0,23.0,24.0,24.0,25.0,25.0,26.0,26.0,27.0,27.0,28.0,28.0,29.0,29.0,30.0,30.0 },5,"craftitem",66,0),
	E710 (710,new double[] { 1.00,1.02,1.04,1.06,1.08,1.10,1.12,1.14,1.16,1.18,1.20,1.22,1.24,1.26,1.28,1.30,1.32,1.34,1.36,1.38,1.40,1.42,1.44,1.46,1.48,1.50,1.52,1.54,1.56,1.58,1.60 },0,"vehiclemove",0,0),
	E711 (711,new double[] { 3.00,3.00,3.00,3.00,3.00,4.00,4.00,4.00,4.00,4.00,5.00,5.00,5.00,5.00,5.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00 },0,"vehicledestroyed",333,5),
	E712 (712,new double[] { 2.00,1.00,1.00,1.00,1.00,1.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00 },0,"vehicledestroyed",0,280),
	E713 (713,new double[] { 0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00 },0,"vehicledestroyed",0,333),
	E720 (720,new double[] { -1.00,-0.90,-0.80,-0.70,-0.60,-0.50,-0.45,-0.40,-0.35,-0.30,-0.25,-0.20,-0.15,-0.10,-0.05,0.00,0.05,0.10,0.15,0.20,0.25,0.30,0.35,0.40,0.45,0.50,0.55,0.60,0.65,0.70,0.75 },15,"entitydamagedbyblock",0,0),
	E730 (730,new double[] { 2.00,2.00,2.00,2.00,2.00,3.00,3.00,3.00,3.00,3.00,4.00,4.00,4.00,4.00,4.00,5.00,5.00,5.00,5.00,5.00,6.00,6.00,6.00,6.00,6.00,7.00,7.00,7.00,7.00,7.00,8.00 },5,"eatfood",0,0),
	E731 (731,new double[] { 6.00,6.40,6.80,7.20,7.60,8.00,8.40,8.80,9.20,9.60,10.00,10.40,10.80,11.20,11.60,12.00,12.40,12.80,13.20,13.60,14.00,14.40,14.80,15.20,15.60,16.00,16.40,16.80,17.20,17.60,18.00 },5,"eatfood",0,0),
	E740 (740,new double[] { 0.95,0.96,0.97,0.98,0.99,1.00,1.01,1.02,1.03,1.04,1.05,1.06,1.07,1.08,1.09,1.10,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,1.20,1.21,1.22,1.23,1.24,1.25 },5,"itemdrop",37,37),
	E741 (741,new double[] { 0.95,0.96,0.97,0.98,0.99,1.00,1.01,1.02,1.03,1.04,1.05,1.06,1.07,1.08,1.09,1.10,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,1.20,1.21,1.22,1.23,1.24,1.25 },5,"itemdrop",38,38),
	E742 (742,new double[] { 0.95,0.96,0.97,0.98,0.99,1.00,1.01,1.02,1.03,1.04,1.05,1.06,1.07,1.08,1.09,1.10,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,1.20,1.21,1.22,1.23,1.24,1.25 },5,"itemdrop",86,86),
	E743 (743,new double[] { 0.95,0.96,0.97,0.98,0.99,1.00,1.01,1.02,1.03,1.04,1.05,1.06,1.07,1.08,1.09,1.10,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,1.20,1.21,1.22,1.23,1.24,1.25 },5,"itemdrop",91,91),
	E810 (810,new double[] { 1.00,1.05,1.10,1.15,1.20,1.25,1.40,1.55,1.70,1.85,2.00,2.15,2.30,2.45,2.60,2.75,2.90,3.05,3.20,3.35,3.50,3.65,3.80,3.95,4.00,4.00,4.00,4.00,4.00,4.00,4.00 },5,"killdrop",0,0),
	E811 (811,new double[] { 1.25,1.45,1.65,1.85,2.05,2.25,2.45,2.65,2.85,3.05,3.25,3.45,3.65,3.85,4.05,4.25,4.45,4.65,4.85,5.05,5.25,5.45,5.65,5.85,6.00,6.00,6.00,6.00,6.00,6.00,6.00 },5,"killdrop",0,0),
	E820 (820,new double[] { 1.00,1.10,1.20,1.30,1.40,1.50,1.65,1.80,1.95,2.10,2.25,2.40,2.55,2.70,2.85,3.00,3.15,3.30,3.45,3.60,3.75,3.90,4.05,4.20,4.35,4.50,4.65,4.80,4.95,5.00,5.00 },5,"killdrop",0,0),
	E821 (821,new double[] { 1.25,1.35,1.45,1.55,1.65,1.75,1.95,2.15,2.35,2.55,2.75,2.95,3.15,3.35,3.55,3.75,3.95,4.15,4.35,4.55,4.75,4.95,5.15,5.35,5.55,5.75,5.95,6.15,6.35,6.55,6.75 },5,"killdrop",0,0),
	E822 (822,new double[] { 1.25,1.35,1.45,1.55,1.65,1.75,1.95,2.15,2.35,2.55,2.75,2.95,3.15,3.35,3.55,3.75,3.95,4.15,4.35,4.55,4.75,4.95,5.15,5.35,5.55,5.75,5.95,6.15,6.35,6.55,6.75 },5,"killdrop",0,0),
	E830 (830,new double[] { 0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.20,0.15,0.10,0.05,0.00 },5,"entityattack",0,0),
	E831 (831,new double[] { 1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,3.00 },5,"craftitem",0,0),
	E840 (840,new double[] { 0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.20,0.15,0.10,0.05,0.00 },5,"entityattack",0,0),
	E841 (841,new double[] { 1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,1.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,2.00,3.00 },5,"craftitem",0,0),
	E850 (850,new double[] { 1.50,1.60,1.70,1.80,1.90,1.00,1.20,1.40,1.60,1.80,2.00,2.20,2.40,2.60,2.80,3.00,3.20,3.40,3.60,3.80,4.00,4.20,4.40,4.60,4.80,5.00,5.20,5.40,5.60,5.80,6.00 },5,"killdrop",0,0),
	E851 (851,new double[] { 0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.00,1.00,1.00,2.00,2.00,2.00,2.00,2.00,3.00,3.00,3.00,3.00,3.00,4.00,4.00,4.00,4.00,4.00,5.00,5.00,5.00,5.00,5.00,6.00 },5,"killdrop",0,0),
	E852 (852,new double[] { 1.00,1.05,1.10,1.15,1.20,1.25,1.30,1.35,1.40,1.45,1.50,1.55,1.60,1.65,1.70,1.75,1.80,1.85,1.90,1.95,2.00,2.05,2.10,2.15,2.20,2.25,2.30,2.35,2.40,2.45,2.50 },5,"killdrop",0,0),
	E990 (990,new double[] { 1.00,1.06,1.12,1.18,1.24,1.30,1.36,1.42,1.48,1.54,1.60,1.66,1.72,1.78,1.84,1.90,1.96,2.02,2.08,2.14,2.20,2.26,2.32,2.38,2.44,2.50,2.56,2.62,2.68,2.74,2.80 },5,"itemdrop",0,0);
	
    public final int effectId;
    public final double[] effects;
    public final int elfEffectLevel;
    public final String effectType;
    public final int searchedItemId;
    public final int createdItemId;

    SkillEffects(
		 int effectId,
		 double[] effects,
		 int elfEffectLevel,
		 String effectType,
		 int searchedItemId,
		 int createdItemId
		 )
	{
	    this.effectId = effectId;
	    this.effects = effects;
	    this.elfEffectLevel = elfEffectLevel;
	    this.effectType = effectType;
	    this.searchedItemId = searchedItemId;
	    this.createdItemId = createdItemId;
	}

	public double getEffectValue(int effectLevel){
	    return this.effects[effectLevel];
	}

	public int getElfLevel(int effectId){
	    return this.elfEffectLevel;
	}

	/*
	 * Returns all effects that trigger on specific effect type and specific item
	 */
	public static List getEffects(int itemId, String effectType){
		//int[] outputArray;
		List outputArray = new ArrayList();
		System.out.println(itemId);
		for(SkillEffects s : SkillEffects.values())
		    if(s.searchedItemId == itemId && effectType.equalsIgnoreCase(s.effectType))
			outputArray.add(s);
		return outputArray;
	}
	
	/*
	 * Returns the output item for effects that have an item output
	 */
	public int getEffectResult(int effectId){
		return this.createdItemId;
	}
	

	/* Although this may work, you shouldn't do this.
	   Have Skills have an array of Effects, and access effects through skills.
	   Unless this needs to be done really efficiently... then thats
	   another story. */
	public static int getSkillForEffect(int effectId) {
	    return SkillEffects.values()[effectId].getSkillForEffect();
	}
	public int getSkillForEffect() {
	    return (this.effectId - (this.effectId % 10))/10;
	}

	public int getRandomBlockCount(int playerSkillLevel){
		Random generator = new Random();
		double blockChance = this.getEffectValue(playerSkillLevel);
		int wholeBlocks = (int)Math.floor(blockChance);
		// DAN SAYS: this is kinda weird
		double partBlocks = blockChance % 1;
		double rand = generator.nextDouble();
		if(partBlocks >= rand){wholeBlocks++;};
		
	    System.out.println("gotrandomblock count, whole blocks =" + wholeBlocks + " and chance was " + partBlocks);
		
		return wholeBlocks;
	}

}